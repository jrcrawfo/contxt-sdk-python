name: build

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-py3.8-${{ hashFiles('**/poetry.lock') }}
      - name: Install package
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Run linters
        run: make lint

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install package
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install -E crypto
      - name: Run unit tests
        run: make test
